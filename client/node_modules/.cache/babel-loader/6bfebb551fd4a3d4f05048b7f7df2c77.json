{"ast":null,"code":"export default class HttpClient {\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n  }\n\n  async fetch(url, options) {\n    const res = await fetch(`${this.baseURL}${url}`, { ...options,\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers\n      }\n    });\n    let data;\n\n    try {\n      data = await res.json();\n    } catch (error) {\n      console.error(error);\n    }\n\n    console.log(`res.status=${res.status}`);\n\n    if (res.status > 299 || res.status < 200) {\n      const message = data && data.message ? data.message : 'Something went wrong!!!';\n      throw new Error(message);\n    }\n\n    return data;\n  }\n\n}","map":{"version":3,"sources":["/Users/yeoungseurkang/projects/node/dwitter/client/src/network/http.js"],"names":["HttpClient","constructor","baseURL","fetch","url","options","res","headers","data","json","error","console","log","status","message","Error"],"mappings":"AAAA,eAAe,MAAMA,UAAN,CAAiB;AAC5BC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACH;;AAEU,QAALC,KAAK,CAACC,GAAD,EAAMC,OAAN,EAAe;AACtB,UAAMC,GAAG,GAAG,MAAMH,KAAK,CAAE,GAAE,KAAKD,OAAQ,GAAEE,GAAI,EAAvB,EAA0B,EAC7C,GAAGC,OAD0C;AAE7CE,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,WAAGF,OAAO,CAACE;AAFN;AAFoC,KAA1B,CAAvB;AAQA,QAAIC,IAAJ;;AACA,QAAI;AACAA,MAAAA,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAb;AACH,KAFD,CAEE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAaN,GAAG,CAACO,MAAO,EAArC;;AAEA,QAAIP,GAAG,CAACO,MAAJ,GAAa,GAAb,IAAoBP,GAAG,CAACO,MAAJ,GAAa,GAArC,EAA0C;AACtC,YAAMC,OAAO,GACTN,IAAI,IAAIA,IAAI,CAACM,OAAb,GAAuBN,IAAI,CAACM,OAA5B,GAAsC,yBAD1C;AAEA,YAAM,IAAIC,KAAJ,CAAUD,OAAV,CAAN;AACH;;AACD,WAAON,IAAP;AACH;;AA7B2B","sourcesContent":["export default class HttpClient {\n    constructor(baseURL) {\n        this.baseURL = baseURL;\n    }\n\n    async fetch(url, options) {\n        const res = await fetch(`${this.baseURL}${url}`, {\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options.headers,\n            },\n        });\n\n        let data;\n        try {\n            data = await res.json();\n        } catch (error) {\n            console.error(error);\n        }\n\n        console.log(`res.status=${res.status}`);\n\n        if (res.status > 299 || res.status < 200) {\n            const message =\n                data && data.message ? data.message : 'Something went wrong!!!';\n            throw new Error(message);\n        }\n        return data;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}