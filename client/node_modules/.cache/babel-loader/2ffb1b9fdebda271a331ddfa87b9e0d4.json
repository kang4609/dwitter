{"ast":null,"code":"export default class AuthService {\n  constructor(http, tokenStorage) {\n    this.http = http;\n    this.tokenStorage = tokenStorage;\n  }\n\n  async login(username, password) {\n    const data = await this.http.fetch('auth/signup', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        //\n        password\n      })\n    });\n    this.tokenStorage.saveToken(data.token);\n    return data;\n  }\n\n  async signup(username, password, name, email, url) {\n    const data = await this.http.fetch('auth/signup', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        //\n        password,\n        name,\n        email,\n        url\n      })\n    });\n    this.tokenStorage.saveToken(data.token);\n    return data;\n  }\n\n  async me() {\n    const token = this.tokenStorage.getToken();\n    return this.http.fetch('auth/signup', {\n      method: 'GET',\n      header: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n  async logout() {\n    return;\n  }\n\n}","map":{"version":3,"sources":["/Users/yeoungseurkang/projects/node/dwitter/client/src/service/auth.js"],"names":["AuthService","constructor","http","tokenStorage","login","username","password","data","fetch","method","body","JSON","stringify","saveToken","token","signup","name","email","url","me","getToken","header","Authorization","logout"],"mappings":"AAAA,eAAe,MAAMA,WAAN,CAAkB;AAC7BC,EAAAA,WAAW,CAACC,IAAD,EAAOC,YAAP,EAAqB;AAC5B,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACH;;AAEU,QAALC,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAC5B,UAAMC,IAAI,GAAG,MAAM,KAAKL,IAAL,CAAUM,KAAV,CAAgB,aAAhB,EAA+B;AAC9CC,MAAAA,MAAM,EAAE,MADsC;AAE9CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBP,QAAAA,QADiB;AACP;AACVC,QAAAA;AAFiB,OAAf;AAFwC,KAA/B,CAAnB;AAQA,SAAKH,YAAL,CAAkBU,SAAlB,CAA4BN,IAAI,CAACO,KAAjC;AACA,WAAOP,IAAP;AACH;;AACW,QAANQ,MAAM,CAACV,QAAD,EAAWC,QAAX,EAAqBU,IAArB,EAA2BC,KAA3B,EAAkCC,GAAlC,EAAuC;AAC/C,UAAMX,IAAI,GAAG,MAAM,KAAKL,IAAL,CAAUM,KAAV,CAAgB,aAAhB,EAA+B;AAC9CC,MAAAA,MAAM,EAAE,MADsC;AAE9CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBP,QAAAA,QADiB;AACP;AACVC,QAAAA,QAFiB;AAGjBU,QAAAA,IAHiB;AAIjBC,QAAAA,KAJiB;AAKjBC,QAAAA;AALiB,OAAf;AAFwC,KAA/B,CAAnB;AAWA,SAAKf,YAAL,CAAkBU,SAAlB,CAA4BN,IAAI,CAACO,KAAjC;AACA,WAAOP,IAAP;AACH;;AACO,QAAFY,EAAE,GAAG;AACP,UAAML,KAAK,GAAG,KAAKX,YAAL,CAAkBiB,QAAlB,EAAd;AAEA,WAAO,KAAKlB,IAAL,CAAUM,KAAV,CAAgB,aAAhB,EAA+B;AAClCC,MAAAA,MAAM,EAAE,KAD0B;AAElCY,MAAAA,MAAM,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASR,KAAM;AAAjC;AAF0B,KAA/B,CAAP;AAIH;;AAEW,QAANS,MAAM,GAAG;AACX;AACH;;AA5C4B","sourcesContent":["export default class AuthService {\n    constructor(http, tokenStorage) {\n        this.http = http;\n        this.tokenStorage = tokenStorage;\n    }\n\n    async login(username, password) {\n        const data = await this.http.fetch('auth/signup', {\n            method: 'POST',\n            body: JSON.stringify({\n                username, //\n                password,\n            }),\n        });\n\n        this.tokenStorage.saveToken(data.token);\n        return data;\n    }\n    async signup(username, password, name, email, url) {\n        const data = await this.http.fetch('auth/signup', {\n            method: 'POST',\n            body: JSON.stringify({\n                username, //\n                password,\n                name,\n                email,\n                url,\n            }),\n        });\n\n        this.tokenStorage.saveToken(data.token);\n        return data;\n    }\n    async me() {\n        const token = this.tokenStorage.getToken();\n\n        return this.http.fetch('auth/signup', {\n            method: 'GET',\n            header: { Authorization: `Bearer ${token}` },\n        });\n    }\n\n    async logout() {\n        return;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}