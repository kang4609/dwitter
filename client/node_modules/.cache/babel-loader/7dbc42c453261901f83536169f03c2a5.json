{"ast":null,"code":"export default class HttpClient {\n  constructor(baseURL, authErrorEventBus) {\n    this.baseURL = baseURL;\n    this.authErrorEventBus = authErrorEventBus;\n  }\n\n  async fetch(url, options) {\n    const res = await fetch(`${this.baseURL}${url}`, { ...options,\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers\n      }\n    });\n    let data;\n\n    try {\n      data = await res.json();\n    } catch (error) {\n      console.error(error);\n    }\n\n    if (res.status > 299 || res.status < 200) {\n      const message = data && data.message ? data.message : 'Something went wrong! ğŸ¤ª';\n\n      if (res.status === 401) {\n        this.authErrorEventBus.notify(error);\n      }\n\n      throw new Error(message);\n    }\n\n    return data;\n  }\n\n}","map":{"version":3,"sources":["/Users/yeoungseurkang/projects/node/dwitter/client/src/network/http.js"],"names":["HttpClient","constructor","baseURL","authErrorEventBus","fetch","url","options","res","headers","data","json","error","console","status","message","notify","Error"],"mappings":"AAAA,eAAe,MAAMA,UAAN,CAAiB;AAC5BC,EAAAA,WAAW,CAACC,OAAD,EAAUC,iBAAV,EAA6B;AACpC,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,iBAAL,GAAyBA,iBAAzB;AACH;;AAEU,QAALC,KAAK,CAACC,GAAD,EAAMC,OAAN,EAAe;AACtB,UAAMC,GAAG,GAAG,MAAMH,KAAK,CAAE,GAAE,KAAKF,OAAQ,GAAEG,GAAI,EAAvB,EAA0B,EAC7C,GAAGC,OAD0C;AAE7CE,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,WAAGF,OAAO,CAACE;AAFN;AAFoC,KAA1B,CAAvB;AAOA,QAAIC,IAAJ;;AACA,QAAI;AACAA,MAAAA,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAb;AACH,KAFD,CAEE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;;AAED,QAAIJ,GAAG,CAACM,MAAJ,GAAa,GAAb,IAAoBN,GAAG,CAACM,MAAJ,GAAa,GAArC,EAA0C;AACtC,YAAMC,OAAO,GACTL,IAAI,IAAIA,IAAI,CAACK,OAAb,GACML,IAAI,CAACK,OADX,GAEM,0BAHV;;AAKA,UAAIP,GAAG,CAACM,MAAJ,KAAe,GAAnB,EAAwB;AACpB,aAAKV,iBAAL,CAAuBY,MAAvB,CAA8BJ,KAA9B;AACH;;AACD,YAAM,IAAIK,KAAJ,CAAUF,OAAV,CAAN;AACH;;AACD,WAAOL,IAAP;AACH;;AAjC2B","sourcesContent":["export default class HttpClient {\n    constructor(baseURL, authErrorEventBus) {\n        this.baseURL = baseURL;\n        this.authErrorEventBus = authErrorEventBus;\n    }\n\n    async fetch(url, options) {\n        const res = await fetch(`${this.baseURL}${url}`, {\n            ...options,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options.headers,\n            },\n        });\n        let data;\n        try {\n            data = await res.json();\n        } catch (error) {\n            console.error(error);\n        }\n\n        if (res.status > 299 || res.status < 200) {\n            const message =\n                data && data.message\n                    ? data.message\n                    : 'Something went wrong! ğŸ¤ª';\n\n            if (res.status === 401) {\n                this.authErrorEventBus.notify(error);\n            }\n            throw new Error(message);\n        }\n        return data;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}